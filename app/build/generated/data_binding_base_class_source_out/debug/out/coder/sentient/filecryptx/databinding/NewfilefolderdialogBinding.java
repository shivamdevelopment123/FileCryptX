// Generated by view binder compiler. Do not edit!
package coder.sentient.filecryptx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import coder.sentient.filecryptx.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewfilefolderdialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton createfileCancelButton;

  @NonNull
  public final AppCompatButton createfileOkButton;

  @NonNull
  public final TextInputEditText newFileFolderEdittext;

  @NonNull
  public final TextInputLayout newFileFolderField;

  private NewfilefolderdialogBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton createfileCancelButton, @NonNull AppCompatButton createfileOkButton,
      @NonNull TextInputEditText newFileFolderEdittext,
      @NonNull TextInputLayout newFileFolderField) {
    this.rootView = rootView;
    this.createfileCancelButton = createfileCancelButton;
    this.createfileOkButton = createfileOkButton;
    this.newFileFolderEdittext = newFileFolderEdittext;
    this.newFileFolderField = newFileFolderField;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewfilefolderdialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewfilefolderdialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.newfilefolderdialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewfilefolderdialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.createfile_cancel_button;
      AppCompatButton createfileCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (createfileCancelButton == null) {
        break missingId;
      }

      id = R.id.createfile_ok_button;
      AppCompatButton createfileOkButton = ViewBindings.findChildViewById(rootView, id);
      if (createfileOkButton == null) {
        break missingId;
      }

      id = R.id.newFileFolder_edittext;
      TextInputEditText newFileFolderEdittext = ViewBindings.findChildViewById(rootView, id);
      if (newFileFolderEdittext == null) {
        break missingId;
      }

      id = R.id.newFileFolderField;
      TextInputLayout newFileFolderField = ViewBindings.findChildViewById(rootView, id);
      if (newFileFolderField == null) {
        break missingId;
      }

      return new NewfilefolderdialogBinding((LinearLayout) rootView, createfileCancelButton,
          createfileOkButton, newFileFolderEdittext, newFileFolderField);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

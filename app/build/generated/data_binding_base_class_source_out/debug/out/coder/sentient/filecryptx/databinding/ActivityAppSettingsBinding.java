// Generated by view binder compiler. Do not edit!
package coder.sentient.filecryptx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.Switch;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import coder.sentient.filecryptx.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAppSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout aboutButton;

  @NonNull
  public final FragmentContainerView fragmentContainerView1;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final LinearLayout privacyPolicyButton;

  @NonNull
  public final Switch settingsHiddenButtonSwitch;

  @NonNull
  public final Spinner settingsThemeSpinner;

  @NonNull
  public final LinearLayout vaultPasswordChangeButton;

  private ActivityAppSettingsBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout aboutButton, @NonNull FragmentContainerView fragmentContainerView1,
      @NonNull LinearLayout main, @NonNull LinearLayout privacyPolicyButton,
      @NonNull Switch settingsHiddenButtonSwitch, @NonNull Spinner settingsThemeSpinner,
      @NonNull LinearLayout vaultPasswordChangeButton) {
    this.rootView = rootView;
    this.aboutButton = aboutButton;
    this.fragmentContainerView1 = fragmentContainerView1;
    this.main = main;
    this.privacyPolicyButton = privacyPolicyButton;
    this.settingsHiddenButtonSwitch = settingsHiddenButtonSwitch;
    this.settingsThemeSpinner = settingsThemeSpinner;
    this.vaultPasswordChangeButton = vaultPasswordChangeButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAppSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAppSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_app_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAppSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_button;
      LinearLayout aboutButton = ViewBindings.findChildViewById(rootView, id);
      if (aboutButton == null) {
        break missingId;
      }

      id = R.id.fragmentContainerView1;
      FragmentContainerView fragmentContainerView1 = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainerView1 == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.privacy_policy_button;
      LinearLayout privacyPolicyButton = ViewBindings.findChildViewById(rootView, id);
      if (privacyPolicyButton == null) {
        break missingId;
      }

      id = R.id.settings_hiddenButton_switch;
      Switch settingsHiddenButtonSwitch = ViewBindings.findChildViewById(rootView, id);
      if (settingsHiddenButtonSwitch == null) {
        break missingId;
      }

      id = R.id.settings_theme_spinner;
      Spinner settingsThemeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (settingsThemeSpinner == null) {
        break missingId;
      }

      id = R.id.vaultPasswordChangeButton;
      LinearLayout vaultPasswordChangeButton = ViewBindings.findChildViewById(rootView, id);
      if (vaultPasswordChangeButton == null) {
        break missingId;
      }

      return new ActivityAppSettingsBinding((LinearLayout) rootView, aboutButton,
          fragmentContainerView1, main, privacyPolicyButton, settingsHiddenButtonSwitch,
          settingsThemeSpinner, vaultPasswordChangeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

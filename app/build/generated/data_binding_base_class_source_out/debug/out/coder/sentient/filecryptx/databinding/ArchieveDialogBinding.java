// Generated by view binder compiler. Do not edit!
package coder.sentient.filecryptx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import coder.sentient.filecryptx.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ArchieveDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton archiveCancelButton;

  @NonNull
  public final EditText archiveConfirmPasswordEditText;

  @NonNull
  public final EditText archivePasswordEditText;

  @NonNull
  public final LinearLayout archivePasswordLayout;

  @NonNull
  public final EditText archivedFileName;

  @NonNull
  public final AppCompatButton createArchieveButton;

  @NonNull
  public final CheckBox protectWithPasswordCheckBox;

  @NonNull
  public final Spinner spinnerCompressionArchieve;

  @NonNull
  public final Spinner typeSpinnerArchive;

  private ArchieveDialogBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton archiveCancelButton,
      @NonNull EditText archiveConfirmPasswordEditText, @NonNull EditText archivePasswordEditText,
      @NonNull LinearLayout archivePasswordLayout, @NonNull EditText archivedFileName,
      @NonNull AppCompatButton createArchieveButton, @NonNull CheckBox protectWithPasswordCheckBox,
      @NonNull Spinner spinnerCompressionArchieve, @NonNull Spinner typeSpinnerArchive) {
    this.rootView = rootView;
    this.archiveCancelButton = archiveCancelButton;
    this.archiveConfirmPasswordEditText = archiveConfirmPasswordEditText;
    this.archivePasswordEditText = archivePasswordEditText;
    this.archivePasswordLayout = archivePasswordLayout;
    this.archivedFileName = archivedFileName;
    this.createArchieveButton = createArchieveButton;
    this.protectWithPasswordCheckBox = protectWithPasswordCheckBox;
    this.spinnerCompressionArchieve = spinnerCompressionArchieve;
    this.typeSpinnerArchive = typeSpinnerArchive;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ArchieveDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ArchieveDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.archieve_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ArchieveDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.archive_cancel_button;
      AppCompatButton archiveCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (archiveCancelButton == null) {
        break missingId;
      }

      id = R.id.archiveConfirmPasswordEditText;
      EditText archiveConfirmPasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (archiveConfirmPasswordEditText == null) {
        break missingId;
      }

      id = R.id.archivePasswordEditText;
      EditText archivePasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (archivePasswordEditText == null) {
        break missingId;
      }

      id = R.id.archivePasswordLayout;
      LinearLayout archivePasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (archivePasswordLayout == null) {
        break missingId;
      }

      id = R.id.archivedFileName;
      EditText archivedFileName = ViewBindings.findChildViewById(rootView, id);
      if (archivedFileName == null) {
        break missingId;
      }

      id = R.id.create_archieve_button;
      AppCompatButton createArchieveButton = ViewBindings.findChildViewById(rootView, id);
      if (createArchieveButton == null) {
        break missingId;
      }

      id = R.id.protectWithPasswordCheckBox;
      CheckBox protectWithPasswordCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (protectWithPasswordCheckBox == null) {
        break missingId;
      }

      id = R.id.spinnerCompressionArchieve;
      Spinner spinnerCompressionArchieve = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCompressionArchieve == null) {
        break missingId;
      }

      id = R.id.typeSpinnerArchive;
      Spinner typeSpinnerArchive = ViewBindings.findChildViewById(rootView, id);
      if (typeSpinnerArchive == null) {
        break missingId;
      }

      return new ArchieveDialogBinding((LinearLayout) rootView, archiveCancelButton,
          archiveConfirmPasswordEditText, archivePasswordEditText, archivePasswordLayout,
          archivedFileName, createArchieveButton, protectWithPasswordCheckBox,
          spinnerCompressionArchieve, typeSpinnerArchive);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

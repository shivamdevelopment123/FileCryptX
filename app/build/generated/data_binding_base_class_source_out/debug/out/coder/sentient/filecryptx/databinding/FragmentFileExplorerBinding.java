// Generated by view binder compiler. Do not edit!
package coder.sentient.filecryptx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import coder.sentient.filecryptx.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFileExplorerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView RecyclerViewFileExplorer;

  @NonNull
  public final CardView TopNavigation;

  @NonNull
  public final CardView bottomNavigation;

  @NonNull
  public final ImageView clearSelectionButton;

  @NonNull
  public final ImageView copyButton;

  @NonNull
  public final LinearLayout createFileButton;

  @NonNull
  public final LinearLayout createFolderButton;

  @NonNull
  public final ImageView cutButton;

  @NonNull
  public final ImageView deleteButton;

  @NonNull
  public final LinearLayout emptyRecyclerViewImage;

  @NonNull
  public final FloatingActionButton fabActionNewFile;

  @NonNull
  public final FloatingActionButton fabActionNewFolder;

  @NonNull
  public final LinearLayout fabContainer;

  @NonNull
  public final FloatingActionButton floatingActionButton;

  @NonNull
  public final ImageView moreOptionsButton;

  @NonNull
  public final ImageView newfolderWithpaste;

  @NonNull
  public final TextView numberOfSelectedFilesTextView;

  @NonNull
  public final TextView pasteButton;

  @NonNull
  public final ImageView pasteClear;

  @NonNull
  public final CardView pastelayout;

  @NonNull
  public final LinearLayout pathContainer;

  @NonNull
  public final ImageView renameButton;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final ImageView selectAllButton;

  @NonNull
  public final ImageView shareButton;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final ImageView toolbarPopupMenu;

  private FragmentFileExplorerBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView RecyclerViewFileExplorer, @NonNull CardView TopNavigation,
      @NonNull CardView bottomNavigation, @NonNull ImageView clearSelectionButton,
      @NonNull ImageView copyButton, @NonNull LinearLayout createFileButton,
      @NonNull LinearLayout createFolderButton, @NonNull ImageView cutButton,
      @NonNull ImageView deleteButton, @NonNull LinearLayout emptyRecyclerViewImage,
      @NonNull FloatingActionButton fabActionNewFile,
      @NonNull FloatingActionButton fabActionNewFolder, @NonNull LinearLayout fabContainer,
      @NonNull FloatingActionButton floatingActionButton, @NonNull ImageView moreOptionsButton,
      @NonNull ImageView newfolderWithpaste, @NonNull TextView numberOfSelectedFilesTextView,
      @NonNull TextView pasteButton, @NonNull ImageView pasteClear, @NonNull CardView pastelayout,
      @NonNull LinearLayout pathContainer, @NonNull ImageView renameButton,
      @NonNull SearchView searchView, @NonNull ImageView selectAllButton,
      @NonNull ImageView shareButton, @NonNull MaterialToolbar toolbar,
      @NonNull ImageView toolbarPopupMenu) {
    this.rootView = rootView;
    this.RecyclerViewFileExplorer = RecyclerViewFileExplorer;
    this.TopNavigation = TopNavigation;
    this.bottomNavigation = bottomNavigation;
    this.clearSelectionButton = clearSelectionButton;
    this.copyButton = copyButton;
    this.createFileButton = createFileButton;
    this.createFolderButton = createFolderButton;
    this.cutButton = cutButton;
    this.deleteButton = deleteButton;
    this.emptyRecyclerViewImage = emptyRecyclerViewImage;
    this.fabActionNewFile = fabActionNewFile;
    this.fabActionNewFolder = fabActionNewFolder;
    this.fabContainer = fabContainer;
    this.floatingActionButton = floatingActionButton;
    this.moreOptionsButton = moreOptionsButton;
    this.newfolderWithpaste = newfolderWithpaste;
    this.numberOfSelectedFilesTextView = numberOfSelectedFilesTextView;
    this.pasteButton = pasteButton;
    this.pasteClear = pasteClear;
    this.pastelayout = pastelayout;
    this.pathContainer = pathContainer;
    this.renameButton = renameButton;
    this.searchView = searchView;
    this.selectAllButton = selectAllButton;
    this.shareButton = shareButton;
    this.toolbar = toolbar;
    this.toolbarPopupMenu = toolbarPopupMenu;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFileExplorerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFileExplorerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_file_explorer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFileExplorerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RecyclerViewFileExplorer;
      RecyclerView RecyclerViewFileExplorer = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerViewFileExplorer == null) {
        break missingId;
      }

      id = R.id.TopNavigation;
      CardView TopNavigation = ViewBindings.findChildViewById(rootView, id);
      if (TopNavigation == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      CardView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.clear_selection_button;
      ImageView clearSelectionButton = ViewBindings.findChildViewById(rootView, id);
      if (clearSelectionButton == null) {
        break missingId;
      }

      id = R.id.copyButton;
      ImageView copyButton = ViewBindings.findChildViewById(rootView, id);
      if (copyButton == null) {
        break missingId;
      }

      id = R.id.createFileButton;
      LinearLayout createFileButton = ViewBindings.findChildViewById(rootView, id);
      if (createFileButton == null) {
        break missingId;
      }

      id = R.id.createFolderButton;
      LinearLayout createFolderButton = ViewBindings.findChildViewById(rootView, id);
      if (createFolderButton == null) {
        break missingId;
      }

      id = R.id.cutButton;
      ImageView cutButton = ViewBindings.findChildViewById(rootView, id);
      if (cutButton == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      ImageView deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.emptyRecyclerViewImage;
      LinearLayout emptyRecyclerViewImage = ViewBindings.findChildViewById(rootView, id);
      if (emptyRecyclerViewImage == null) {
        break missingId;
      }

      id = R.id.fabAction_newFile;
      FloatingActionButton fabActionNewFile = ViewBindings.findChildViewById(rootView, id);
      if (fabActionNewFile == null) {
        break missingId;
      }

      id = R.id.fabAction_newFolder;
      FloatingActionButton fabActionNewFolder = ViewBindings.findChildViewById(rootView, id);
      if (fabActionNewFolder == null) {
        break missingId;
      }

      id = R.id.fabContainer;
      LinearLayout fabContainer = ViewBindings.findChildViewById(rootView, id);
      if (fabContainer == null) {
        break missingId;
      }

      id = R.id.floatingActionButton;
      FloatingActionButton floatingActionButton = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButton == null) {
        break missingId;
      }

      id = R.id.moreOptionsButton;
      ImageView moreOptionsButton = ViewBindings.findChildViewById(rootView, id);
      if (moreOptionsButton == null) {
        break missingId;
      }

      id = R.id.newfolder_withpaste;
      ImageView newfolderWithpaste = ViewBindings.findChildViewById(rootView, id);
      if (newfolderWithpaste == null) {
        break missingId;
      }

      id = R.id.number_of_selected_files_textView;
      TextView numberOfSelectedFilesTextView = ViewBindings.findChildViewById(rootView, id);
      if (numberOfSelectedFilesTextView == null) {
        break missingId;
      }

      id = R.id.paste_button;
      TextView pasteButton = ViewBindings.findChildViewById(rootView, id);
      if (pasteButton == null) {
        break missingId;
      }

      id = R.id.paste_clear;
      ImageView pasteClear = ViewBindings.findChildViewById(rootView, id);
      if (pasteClear == null) {
        break missingId;
      }

      id = R.id.pastelayout;
      CardView pastelayout = ViewBindings.findChildViewById(rootView, id);
      if (pastelayout == null) {
        break missingId;
      }

      id = R.id.pathContainer;
      LinearLayout pathContainer = ViewBindings.findChildViewById(rootView, id);
      if (pathContainer == null) {
        break missingId;
      }

      id = R.id.renameButton;
      ImageView renameButton = ViewBindings.findChildViewById(rootView, id);
      if (renameButton == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.selectAllButton;
      ImageView selectAllButton = ViewBindings.findChildViewById(rootView, id);
      if (selectAllButton == null) {
        break missingId;
      }

      id = R.id.shareButton;
      ImageView shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_popup_menu;
      ImageView toolbarPopupMenu = ViewBindings.findChildViewById(rootView, id);
      if (toolbarPopupMenu == null) {
        break missingId;
      }

      return new FragmentFileExplorerBinding((LinearLayout) rootView, RecyclerViewFileExplorer,
          TopNavigation, bottomNavigation, clearSelectionButton, copyButton, createFileButton,
          createFolderButton, cutButton, deleteButton, emptyRecyclerViewImage, fabActionNewFile,
          fabActionNewFolder, fabContainer, floatingActionButton, moreOptionsButton,
          newfolderWithpaste, numberOfSelectedFilesTextView, pasteButton, pasteClear, pastelayout,
          pathContainer, renameButton, searchView, selectAllButton, shareButton, toolbar,
          toolbarPopupMenu);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package coder.sentient.filecryptx.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import coder.sentient.filecryptx.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView allFileSizeText;

  @NonNull
  public final ProgressBar allFilesProgress;

  @NonNull
  public final TextView currentFileName;

  @NonNull
  public final ProgressBar currentFileProgress;

  @NonNull
  public final TextView currentFileSizeText;

  @NonNull
  public final TextView totalCopied;

  private NotificationLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextView allFileSizeText, @NonNull ProgressBar allFilesProgress,
      @NonNull TextView currentFileName, @NonNull ProgressBar currentFileProgress,
      @NonNull TextView currentFileSizeText, @NonNull TextView totalCopied) {
    this.rootView = rootView;
    this.allFileSizeText = allFileSizeText;
    this.allFilesProgress = allFilesProgress;
    this.currentFileName = currentFileName;
    this.currentFileProgress = currentFileProgress;
    this.currentFileSizeText = currentFileSizeText;
    this.totalCopied = totalCopied;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allFileSizeText;
      TextView allFileSizeText = ViewBindings.findChildViewById(rootView, id);
      if (allFileSizeText == null) {
        break missingId;
      }

      id = R.id.allFilesProgress;
      ProgressBar allFilesProgress = ViewBindings.findChildViewById(rootView, id);
      if (allFilesProgress == null) {
        break missingId;
      }

      id = R.id.currentFileName;
      TextView currentFileName = ViewBindings.findChildViewById(rootView, id);
      if (currentFileName == null) {
        break missingId;
      }

      id = R.id.currentFileProgress;
      ProgressBar currentFileProgress = ViewBindings.findChildViewById(rootView, id);
      if (currentFileProgress == null) {
        break missingId;
      }

      id = R.id.currentFileSizeText;
      TextView currentFileSizeText = ViewBindings.findChildViewById(rootView, id);
      if (currentFileSizeText == null) {
        break missingId;
      }

      id = R.id.totalCopied;
      TextView totalCopied = ViewBindings.findChildViewById(rootView, id);
      if (totalCopied == null) {
        break missingId;
      }

      return new NotificationLayoutBinding((LinearLayout) rootView, allFileSizeText,
          allFilesProgress, currentFileName, currentFileProgress, currentFileSizeText, totalCopied);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
